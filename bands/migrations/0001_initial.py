# Generated by Django 5.2.1 on 2025-09-14 10:38

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Band',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('genre', models.CharField(max_length=50)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('bio', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='bands/')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='bands/logos/')),
                ('formed_date', models.DateField(blank=True, null=True)),
                ('website', models.URLField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Venue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('address', models.TextField()),
                ('city', models.CharField(max_length=100)),
                ('capacity', models.IntegerField()),
                ('phone', models.CharField(blank=True, max_length=20)),
            ],
            options={
                'ordering': ['city', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Concert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('date', models.DateTimeField()),
                ('location', models.CharField(max_length=100)),
                ('doors_open', models.TimeField(blank=True, null=True)),
                ('ticket_price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('total_tickets', models.IntegerField(default=0)),
                ('tickets_sold', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('description', models.TextField(blank=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='concerts/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('band', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='concerts', to='bands.band')),
                ('venue', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='concerts', to='bands.venue')),
            ],
            options={
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticket_number', models.CharField(editable=False, max_length=50, unique=True)),
                ('purchase_date', models.DateTimeField(auto_now_add=True)),
                ('price_paid', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('active', 'Active'), ('used', 'Used'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded')], default='active', max_length=20)),
                ('buyer_email', models.EmailField(max_length=254)),
                ('buyer_phone', models.CharField(blank=True, max_length=20)),
                ('buyer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tickets', to=settings.AUTH_USER_MODEL)),
                ('concert', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tickets', to='bands.concert')),
            ],
            options={
                'ordering': ['-purchase_date'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_method', models.CharField(choices=[('card', 'Credit Card'), ('paypal', 'PayPal'), ('stripe', 'Stripe')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('transaction_id', models.CharField(blank=True, max_length=100)),
                ('payment_date', models.DateTimeField(auto_now_add=True)),
                ('ticket', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='payment', to='bands.ticket')),
            ],
            options={
                'ordering': ['-payment_date'],
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('comment', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('concert', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='bands.concert')),
                ('reviewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('concert', 'reviewer')},
            },
        ),
    ]
